sudo: required

language: php

notifications:
  email: false

services:
  - mysql

addons:
  apt:
    packages:
      # required by WordPress
      - libjpeg-dev
      - libpng12-dev
      - php5-fpm
      - php5-mysql
      - nginx
  hosts:
    - paylug.localhost

cache:
  apt: true
  directories:
    - vendor
    - $HOME/.composer/cache/files

# Test main supported versions of PHP against latest WP. 5.2 is min supported PHP version.
php:
  - 5.6
  - 7.0
  - 7.1
  - 7.2
 
cache:
  directories:
    - $HOME/.composer/cache

env:
  - WP_VERSION=latest WP_MULTISITE=0  WC_VERSION=2.6.14

env:
  global:
    - WP_FOLDER="/tmp/wordpress"
    - WP_URL="http://payplug.localhost"
    - WP_DOMAIN="payplug.localhost"
    - DB_NAME="test"
    - TEST_DB_NAME="wpTests"
    - WP_TABLE_PREFIX="wp_"
    - WP_ADMIN_USERNAME="admin"
    - WP_ADMIN_PASSWORD="admin"
  matrix:
    # Wordpress versions
    - WP_VERSION=latest
    - WP_VERSION=4.4.15

    # Woocommerce versions
    - WC_VERSION=2.6.14
    - WC_VERSION=3.3.5
before_install:
  # create the databases that will be used in the tests
  - mysql -e "create database IF NOT EXISTS $DB_NAME;" -uroot
  - mysql -e "create database IF NOT EXISTS $TEST_DB_NAME;" -uroot
  # set up folders
  - mkdir -p $WP_FOLDER
  - mkdir tools
  # install wp-cli in the `tools` folder
  - wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -P $(pwd)/tools/
  - chmod +x tools/wp-cli.phar && mv tools/wp-cli.phar tools/wp
  # append the `tools` folder to the PATH
  - export PATH=$PATH:$(pwd)/tools
  # prepend the `vendor/bin` folder the PATH
  - export PATH=vendor/bin:$PATH

install:
  - composer install --prefer-dist -o

  # install WordPress in the `wordpress` folder
  - cd $WP_FOLDER
  - wp core download --version=$WP_VERSION
  - wp config create --dbname="$DB_NAME" --dbuser="root" --dbpass="" --dbhost="127.0.0.1" --dbprefix="$WP_TABLE_PREFIX"
  - wp core install --url="$WP_URL" --title="Test" --admin_user="$WP_ADMIN_USERNAME" --admin_password="$WP_ADMIN_PASSWORD" --admin_email="admin@$WP_DOMAIN" --skip-email

  # Install Woocommerce to needed version
  - wp plugin install --activate woocommerce --version=$WC_VERSION --force

  # Storefront theme
  - wp theme install --activate storefront

  # flush rewrite rules to use pretty permalinks
  - wp rewrite structure '/%postname%/' --hard

  # get back to the build folder
  - cd $TRAVIS_BUILD_DIR

  # copy the Nginx configuration file to the default site and replace the path and domain
  - sudo cp bin/travis-nginx-conf /etc/nginx/sites-available/$WP_DOMAIN
  - sudo sed -e "s?%WP_FOLDER%?$WP_FOLDER?g" --in-place /etc/nginx/sites-available/$WP_DOMAIN
  - sudo sed -e "s?%WP_DOMAIN%?$WP_DOMAIN?g" --in-place /etc/nginx/sites-available/$WP_DOMAIN

  # enable the WordPress installation
  - sudo ln -s /etc/nginx/sites-available/$WP_DOMAIN /etc/nginx/sites-enabled/

before_script:
  - sudo service php5-fpm restart
  - sudo service nginx restart 

  # symbolically link the plugin root folder to the WordPress installation folder
  # if you are using wp-browser use the Symlinker extension and skip this
  - ln -s $TRAVIS_BUILD_DIR $WP_FOLDER/wp-content/plugins

  - codecept build
  - phantomjs --webdriver=4444 --ssl-protocol=any --ignore-ssl-errors=true &

script:
  - codecept run acceptance
